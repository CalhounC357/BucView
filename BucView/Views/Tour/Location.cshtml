@model TourLocation

@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
<style>
    h2 {
        text-align: center
    }

    h4 {
        text-align: center
    }
</style>

@* Conditionally show progress in the tour based on current rank and total number of locations. *@
@if (ViewData["LocationCount"] != null)
{
    <h1>@Model.Rank of @ViewData["LocationCount"]</h1>
}
else
{
    <h1>@Model.Rank</h1>
}
<h2>@Model.Location?.Name</h2>
<h4>@Model.Location?.Description</h4>

<div id="carousel" class="carousel slide w-50 mx-auto" data-bs-ride="carousel">
    <div class="carousel-indicators">

        @for (int i = 0; i < Model.Location.Images.Count; i++)  // Iterate through all the images, creating an indicator for each
        {

            // The first button needs the "active" class so the carousel indicators have a starting point
            if (i == 0)
            {
                <button type="button" data-bs-target="#carousel" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 0"></button>
            }
            else
            {
                <button type="button" data-bs-target="#carousel" data-bs-slide-to="@i" aria-label="Slide @i"></button>
            }
        }

    </div>
    <div class="carousel-inner" style="height:300px">

        @foreach (var image in Model.Location.Images)   // Iterate through all the images, creating div and img elements for each
        {

            // The first image needs the "active" class so the carousel has a starting point
            if (image == Model.Location.Images.First())
            {
                <div class="carousel-item active">
                    <img src="~/images/Locations/@image.ImageUrl" style="display:block; margin:auto; height:auto" class="d-block w-100 h-100" alt="@Model.Location.Name-@image.Rank">
                </div>
            }
            else
            {
                <div class="carousel-item">
                    <img src="~/images/Locations/@image.ImageUrl" style="display:block; margin:auto; height:auto" class="d-block w-100 h-100" alt="@Model.Location.Name-@image.Rank">
                </div>
            }
        }

    </div>
    <button class="carousel-control-prev" type="button" data-bs-target="#carousel" data-bs-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
    </button>

    <button class="carousel-control-next" type="button" data-bs-target="#carousel" data-bs-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Next</span>
    </button>
</div>

@* Only display the next location heading and interactive map if there exists a map for the current location. *@
@if (Model.EmbeddedMapUrl != null)
{
    <h4><b>Next location:</b></h4>

    <!-- Frame for the interactive location maps -->
    <!-- Added align center to center the map under the carasel-->
    <p align="center"><iframe src="@Model.EmbeddedMapUrl" width="600" height="450" style="border:0;" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe></p>
}


@*This makes the next button and back button appear the same style
    Also some sketchy styling to set the button color to the same as the header (same as back button)
*@
<form>

    <input type="button"
           value="Next!-->"
           onclick="window.location.href='@Url.Action("NextLocation", "Tour", new { tourId = Model.TourId, rank = Model.Rank + 1 })';"
           class="btn btn-primary float-end" 
           style="--bs-btn-bg: #001c43; --bs-btn-border-color: #001c43">
</form>

@*Adds a back button to the screen. It adjust to what page you just come from*@
<form>
    <input type="button"
           value="<-- Go Back!"
           onclick="history.back()"
           class="btn btn-primary" 
           style="--bs-btn-bg: #001c43; --bs-btn-border-color: #001c43">
</form>

@*Button to redirect from a given tour page back to the tour homepage*@
<form style="text-align: center">
    @Html.ActionLink("Tour Homepage", "Index", "Tour", new { id = Model.TourId }, new { @class="btn btn-warning" })
</form>

